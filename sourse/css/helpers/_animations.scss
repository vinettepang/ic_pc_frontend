@mixin animation($str) {
    @include css3-prefix('animation', $str);
}

@mixin animation-name($name) {
    @include css3-prefix('animation-name', $name);
}


@mixin transition($properties...) {
    @if length($properties) >= 1 {
        @include css3-prefix('transition', $properties);
    } @else {
        @include css3-prefix('transition', $what: all, $length: 1s, $easing: ease-in-out);
    }
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@if $import-animations == 'all' or index($import-animations, 'fade') {
@include keyframes(fadeIn) {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@include keyframes(fadeOut) {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

.fadeIn { @include animation-name(fadeIn); }
.fadeOut { @include animation-name(fadeOut); }
}

@if $import-animations == 'all' or index($import-animations, 'slide') {
@include keyframes(slideInUp) {
    0% {
        @include transform(translateY(100%));
        visibility: visible;
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

// @include keyframes(slideInDown) {
//     0% {
//         @include transform(translateY(-100%));
//         visibility: visible;
//         opacity: 0;
//     }

//     100% {
//         transform: translateY(0);
//         opacity: 1;
//     }
// }

@include keyframes (slideInDown) {
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

@include keyframes(slideInLeft) {
    0% {
        @include transform(translateX(-100%));
        visibility: visible;
        opacity: 0;
    }

    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@include keyframes(slideInRight) {
    0% {
        @include transform(translateX(100%));
        visibility: visible;
        opacity: 0;
    }

    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

// @include keyframes(slideOutUp) {
//     0% {
//         @include transform(translateY(0));
//         opacity: 1;
//     }

//     100% {
//         visibility: hidden;
//         transform: translateY(-100%);
//         opacity: 0;
//     }
// }

@include keyframes (slideOutUp) {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, -100%, 0);
  }
}

@include keyframes(slideOutDown) {
    0% {
        @include transform(translateY(0));
        opacity: 1;
    }

    100% {
        visibility: hidden;
        transform: translateY(100%);
        opacity: 0;
    }
}

@include keyframes(slideOutLeft) {
    0% {
        @include transform(translateX(0));
        opacity: 1;
    }

    100% {
        visibility: hidden;
        transform: translateX(-100%);
        opacity: 0;
    }
}

@include keyframes(slideOutRight) {
    0% {
        @include transform(translateX(0));
        opacity: 1;
    }

    100% {
        visibility: hidden;
        transform: translateX(100%);
        opacity: 0;
    }
}

.slideInUp { @include animation-name(slideInUp); }
.slideInDown { @include animation-name(slideInDown); }
.slideInLeft { @include animation-name(slideInLeft); }
.slideInRight { @include animation-name(slideInRight); }
.slideOutUp { @include animation-name(slideOutUp); }
.slideOutDown { @include animation-name(slideOutDown); }
.slideOutLeft { @include animation-name(slideOutLeft); }
}

.animated {
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

@for $i from 0s through 2s {
    .animate-delay-#{$i/1s}-2 {
        -webkit-animation-delay: $i + 0.2s;
        animation-delay: $i + 0.2s;
    }

    .animate-delay-#{$i/1s}-4 {
        -webkit-animation-delay: $i + 0.4s;
        animation-delay: $i + 0.4s;
    }

    .animate-delay-#{$i/1s}-6 {
        -webkit-animation-delay: $i + 0.6s;
        animation-delay: $i + 0.6s;
    }

    .animate-delay-#{$i/1s}-8 {
        -webkit-animation-delay: $i + 0.8s;
        animation-delay: $i + 0.8s;
    }

    .animate-delay-#{$i/1s + 1} {
        -webkit-animation-delay: $i + 1s;
        animation-delay: $i + 1s;
    }
}